// flow-typed signature: d7fc97126c2f50d0c3a81958bcb26432
// flow-typed version: <<STUB>>/m3u8-parser_v^3.0.0/flow_v0.50.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'm3u8-parser'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module 'm3u8-parser' {
  declare module.exports: any;
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */
declare module 'm3u8-parser/dist/m3u8-parser.cjs' {
  declare module.exports: any;
}

declare module 'm3u8-parser/dist/m3u8-parser.es' {
  declare module.exports: any;
}

declare module 'm3u8-parser/dist/m3u8-parser' {
  declare module.exports: any;
}

declare module 'm3u8-parser/dist/m3u8-parser.min' {
  declare module.exports: any;
}

declare module 'm3u8-parser/scripts/build-test' {
  declare module.exports: any;
}

declare module 'm3u8-parser/scripts/export-m3u8s' {
  declare module.exports: any;
}

declare module 'm3u8-parser/scripts/m3u8' {
  declare module.exports: any;
}

declare module 'm3u8-parser/scripts/modules.rollup.config' {
  declare module.exports: any;
}

declare module 'm3u8-parser/scripts/postversion' {
  declare module.exports: any;
}

declare module 'm3u8-parser/scripts/server' {
  declare module.exports: any;
}

declare module 'm3u8-parser/scripts/test.rollup.config' {
  declare module.exports: any;
}

declare module 'm3u8-parser/scripts/umd.rollup.config' {
  declare module.exports: any;
}

declare module 'm3u8-parser/scripts/version' {
  declare module.exports: any;
}

declare module 'm3u8-parser/src/index' {
  declare module.exports: any;
}

declare module 'm3u8-parser/src/line-stream' {
  declare module.exports: any;
}

declare module 'm3u8-parser/src/parse-stream' {
  declare module.exports: any;
}

declare module 'm3u8-parser/src/parser' {
  declare module.exports: any;
}

declare module 'm3u8-parser/src/stream' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/dist/bundle' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/absoluteUris' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/allowCache' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/allowCacheInvalid' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/alternateAudio' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/alternateVideo' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/brightcove' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/byteRange' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/dateTime' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/disallowCache' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/disc-sequence' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/discontinuity' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/domainUris' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/empty' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/emptyAllowCache' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/emptyMediaSequence' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/emptyPlaylistType' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/emptyTargetDuration' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/encrypted' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/event' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/extinf' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/extXPlaylistTypeInvalidPlaylist' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/fmp4' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/headerOnly' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/invalidAllowCache' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/invalidMediaSequence' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/invalidPlaylistType' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/invalidTargetDuration' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/liveMissingSegmentDuration' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/liveStart30sBefore' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/manifestExtTTargetdurationNegative' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/manifestExtXEndlistEarly' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/manifestNoExtM3u' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/master-fmp4' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/master' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/media' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/mediaSequence' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/missingEndlist' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/missingExtinf' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/missingMediaSequence' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/missingSegmentDuration' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/multipleAudioGroups' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/multipleAudioGroupsCombinedMain' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/multipleTargetDurations' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/multipleVideo' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/negativeMediaSequence' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/playlist' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/playlistMediaSequenceHigher' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/streamInfInvalid' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/twoMediaSequences' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/versionInvalid' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/whiteSpace' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/fixtures/m3u8/zeroDuration' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/karma.conf' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/m3u8.test' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/test-expected' {
  declare module.exports: any;
}

declare module 'm3u8-parser/test/test-manifests' {
  declare module.exports: any;
}

// Filename aliases
declare module 'm3u8-parser/dist/m3u8-parser.cjs.js' {
  declare module.exports: $Exports<'m3u8-parser/dist/m3u8-parser.cjs'>;
}
declare module 'm3u8-parser/dist/m3u8-parser.es.js' {
  declare module.exports: $Exports<'m3u8-parser/dist/m3u8-parser.es'>;
}
declare module 'm3u8-parser/dist/m3u8-parser.js' {
  declare module.exports: $Exports<'m3u8-parser/dist/m3u8-parser'>;
}
declare module 'm3u8-parser/dist/m3u8-parser.min.js' {
  declare module.exports: $Exports<'m3u8-parser/dist/m3u8-parser.min'>;
}
declare module 'm3u8-parser/scripts/build-test.js' {
  declare module.exports: $Exports<'m3u8-parser/scripts/build-test'>;
}
declare module 'm3u8-parser/scripts/export-m3u8s.js' {
  declare module.exports: $Exports<'m3u8-parser/scripts/export-m3u8s'>;
}
declare module 'm3u8-parser/scripts/m3u8.js' {
  declare module.exports: $Exports<'m3u8-parser/scripts/m3u8'>;
}
declare module 'm3u8-parser/scripts/modules.rollup.config.js' {
  declare module.exports: $Exports<'m3u8-parser/scripts/modules.rollup.config'>;
}
declare module 'm3u8-parser/scripts/postversion.js' {
  declare module.exports: $Exports<'m3u8-parser/scripts/postversion'>;
}
declare module 'm3u8-parser/scripts/server.js' {
  declare module.exports: $Exports<'m3u8-parser/scripts/server'>;
}
declare module 'm3u8-parser/scripts/test.rollup.config.js' {
  declare module.exports: $Exports<'m3u8-parser/scripts/test.rollup.config'>;
}
declare module 'm3u8-parser/scripts/umd.rollup.config.js' {
  declare module.exports: $Exports<'m3u8-parser/scripts/umd.rollup.config'>;
}
declare module 'm3u8-parser/scripts/version.js' {
  declare module.exports: $Exports<'m3u8-parser/scripts/version'>;
}
declare module 'm3u8-parser/src/index.js' {
  declare module.exports: $Exports<'m3u8-parser/src/index'>;
}
declare module 'm3u8-parser/src/line-stream.js' {
  declare module.exports: $Exports<'m3u8-parser/src/line-stream'>;
}
declare module 'm3u8-parser/src/parse-stream.js' {
  declare module.exports: $Exports<'m3u8-parser/src/parse-stream'>;
}
declare module 'm3u8-parser/src/parser.js' {
  declare module.exports: $Exports<'m3u8-parser/src/parser'>;
}
declare module 'm3u8-parser/src/stream.js' {
  declare module.exports: $Exports<'m3u8-parser/src/stream'>;
}
declare module 'm3u8-parser/test/dist/bundle.js' {
  declare module.exports: $Exports<'m3u8-parser/test/dist/bundle'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/absoluteUris.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/absoluteUris'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/allowCache.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/allowCache'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/allowCacheInvalid.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/allowCacheInvalid'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/alternateAudio.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/alternateAudio'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/alternateVideo.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/alternateVideo'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/brightcove.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/brightcove'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/byteRange.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/byteRange'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/dateTime.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/dateTime'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/disallowCache.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/disallowCache'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/disc-sequence.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/disc-sequence'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/discontinuity.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/discontinuity'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/domainUris.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/domainUris'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/empty.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/empty'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/emptyAllowCache.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/emptyAllowCache'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/emptyMediaSequence.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/emptyMediaSequence'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/emptyPlaylistType.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/emptyPlaylistType'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/emptyTargetDuration.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/emptyTargetDuration'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/encrypted.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/encrypted'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/event.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/event'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/extinf.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/extinf'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/extXPlaylistTypeInvalidPlaylist.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/extXPlaylistTypeInvalidPlaylist'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/fmp4.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/fmp4'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/headerOnly.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/headerOnly'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/invalidAllowCache.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/invalidAllowCache'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/invalidMediaSequence.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/invalidMediaSequence'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/invalidPlaylistType.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/invalidPlaylistType'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/invalidTargetDuration.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/invalidTargetDuration'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/liveMissingSegmentDuration.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/liveMissingSegmentDuration'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/liveStart30sBefore.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/liveStart30sBefore'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/manifestExtTTargetdurationNegative.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/manifestExtTTargetdurationNegative'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/manifestExtXEndlistEarly.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/manifestExtXEndlistEarly'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/manifestNoExtM3u.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/manifestNoExtM3u'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/master-fmp4.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/master-fmp4'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/master.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/master'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/media.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/media'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/mediaSequence.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/mediaSequence'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/missingEndlist.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/missingEndlist'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/missingExtinf.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/missingExtinf'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/missingMediaSequence.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/missingMediaSequence'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/missingSegmentDuration.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/missingSegmentDuration'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/multipleAudioGroups.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/multipleAudioGroups'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/multipleAudioGroupsCombinedMain.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/multipleAudioGroupsCombinedMain'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/multipleTargetDurations.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/multipleTargetDurations'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/multipleVideo.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/multipleVideo'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/negativeMediaSequence.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/negativeMediaSequence'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/playlist.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/playlist'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/playlistMediaSequenceHigher.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/playlistMediaSequenceHigher'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/streamInfInvalid.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/streamInfInvalid'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/twoMediaSequences.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/twoMediaSequences'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/versionInvalid.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/versionInvalid'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/whiteSpace.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/whiteSpace'>;
}
declare module 'm3u8-parser/test/fixtures/m3u8/zeroDuration.js' {
  declare module.exports: $Exports<'m3u8-parser/test/fixtures/m3u8/zeroDuration'>;
}
declare module 'm3u8-parser/test/karma.conf.js' {
  declare module.exports: $Exports<'m3u8-parser/test/karma.conf'>;
}
declare module 'm3u8-parser/test/m3u8.test.js' {
  declare module.exports: $Exports<'m3u8-parser/test/m3u8.test'>;
}
declare module 'm3u8-parser/test/test-expected.js' {
  declare module.exports: $Exports<'m3u8-parser/test/test-expected'>;
}
declare module 'm3u8-parser/test/test-manifests.js' {
  declare module.exports: $Exports<'m3u8-parser/test/test-manifests'>;
}
